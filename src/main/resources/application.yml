spring:
  profiles:
    include:
    - "h2db" #원하는 profile 활성화 시키기
    - "default"
---
spring:
  config:
    activate:
      on-profile: "default"
  application:
    name: "moamoa"

#소셜 로그인 신청: 현재는 로컬에서만 작동
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:9000/login/oauth2/code/google #서비스에 등록한 우리쪽 로그인 성공 URI
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:9000/login/oauth2/code/naver #서비스에 등록한 우리쪽 로그인 성공 URI
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - ageGroup #연령대
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize #서비스 로그인 창 주소
            token-uri: https://nid.naver.com/oauth2.0/token #토큰 발급 서버 주소
            user-info-uri: https://openapi.naver.com/v1/nid/me #사용자 정보 획득 주소
            user-name-attribute: response #응답 데이터 변수

jwt:
  secret: ${JWT_SECRET}
  accessTokenExpiration: ${JWT_EXPIRATION} # 1일
server:
  port: 9000
logging:
  level:
    root: info
  file:
    name: /var/log/springboot/application.log
---
spring:
  config:
    activate:
      on-profile: "h2db"
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  datasource:
    url: jdbc:h2:mem:test;mode=mysql  # inmemory mode실행 및 mysql 모드로 실행
#    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1; mode=mysql
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    database: h2  # 알아서 해줘서 해줄 필요 없긴 함
    hibernate:
      ddl-auto: create-drop # 매 실행시 db create & 서버 종료시 db drop
    show-sql: true

